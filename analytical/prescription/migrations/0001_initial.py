# Generated by Django 4.2.7 on 2025-10-01 13:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Drug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Drug Name")),
                (
                    "generic_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Generic Name"
                    ),
                ),
                (
                    "dosage_form",
                    models.CharField(max_length=50, verbose_name="Dosage Form"),
                ),
                ("strength", models.CharField(max_length=50, verbose_name="Strength")),
                (
                    "indications",
                    models.TextField(blank=True, verbose_name="Indications"),
                ),
                (
                    "contraindications",
                    models.TextField(blank=True, verbose_name="Contraindications"),
                ),
                (
                    "side_effects",
                    models.TextField(blank=True, verbose_name="Side Effects"),
                ),
                (
                    "interactions",
                    models.JSONField(default=list, verbose_name="Interactions"),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Category"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Drug",
                "verbose_name_plural": "Drugs",
                "db_table": "prescription_drugs",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "uid",
                    models.CharField(
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Patient UID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Full Name")),
                (
                    "age",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ],
                        verbose_name="Age",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("Other", "Other")],
                        max_length=10,
                        verbose_name="Gender",
                    ),
                ),
                ("phone", models.CharField(max_length=15, verbose_name="Phone Number")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email Address"
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "emergency_contact",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Emergency Contact"
                    ),
                ),
                (
                    "emergency_phone",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Emergency Phone"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_patients",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_patients",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient",
                "verbose_name_plural": "Patients",
                "db_table": "prescription_patients",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PrescriptionTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Template Name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("diagnosis", models.TextField(verbose_name="Associated Diagnosis")),
                (
                    "medications",
                    models.JSONField(default=list, verbose_name="Template Medications"),
                ),
                (
                    "instructions",
                    models.TextField(verbose_name="Template Instructions"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prescription Template",
                "verbose_name_plural": "Prescription Templates",
                "db_table": "prescription_templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PrescriptionAuditTrail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Audit ID"
                    ),
                ),
                (
                    "table_name",
                    models.CharField(max_length=50, verbose_name="Table Name"),
                ),
                (
                    "record_id",
                    models.CharField(max_length=50, verbose_name="Record ID"),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("INSERT", "Insert"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                        ],
                        max_length=20,
                        verbose_name="Action",
                    ),
                ),
                (
                    "old_values",
                    models.JSONField(blank=True, null=True, verbose_name="Old Values"),
                ),
                (
                    "new_values",
                    models.JSONField(blank=True, null=True, verbose_name="New Values"),
                ),
                (
                    "changed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Changed At"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "changed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_changes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Changed By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Trail",
                "verbose_name_plural": "Audit Trails",
                "db_table": "prescription_audit_trail",
                "ordering": ["-changed_at"],
            },
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="Prescription ID",
                    ),
                ),
                (
                    "prescription_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Prescription Date",
                    ),
                ),
                ("diagnosis", models.TextField(verbose_name="Diagnosis")),
                ("symptoms", models.TextField(blank=True, verbose_name="Symptoms")),
                (
                    "medications",
                    models.JSONField(default=list, verbose_name="Medications"),
                ),
                ("instructions", models.TextField(verbose_name="Instructions")),
                (
                    "follow_up_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Follow-up Date"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_prescriptions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="prescription.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_prescriptions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prescription",
                "verbose_name_plural": "Prescriptions",
                "db_table": "prescription_prescriptions",
                "ordering": ["-prescription_date"],
            },
        ),
        migrations.CreateModel(
            name="PatientProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "medical_history",
                    models.TextField(blank=True, verbose_name="Medical History"),
                ),
                ("allergies", models.TextField(blank=True, verbose_name="Allergies")),
                (
                    "current_medications",
                    models.TextField(blank=True, verbose_name="Current Medications"),
                ),
                (
                    "vital_signs",
                    models.JSONField(default=dict, verbose_name="Vital Signs"),
                ),
                (
                    "lab_results",
                    models.JSONField(default=dict, verbose_name="Lab Results"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_profiles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to="prescription.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_profiles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient Profile",
                "verbose_name_plural": "Patient Profiles",
                "db_table": "prescription_patient_profiles",
            },
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Observation ID"
                    ),
                ),
                (
                    "observation_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Observation Date",
                    ),
                ),
                (
                    "observation_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("follow_up", "Follow-up"),
                            ("emergency", "Emergency"),
                            ("routine", "Routine"),
                            ("surgery", "Surgery"),
                        ],
                        max_length=50,
                        verbose_name="Observation Type",
                    ),
                ),
                ("symptoms", models.TextField(blank=True, verbose_name="Symptoms")),
                (
                    "examination_findings",
                    models.TextField(blank=True, verbose_name="Examination Findings"),
                ),
                (
                    "recommendations",
                    models.TextField(blank=True, verbose_name="Recommendations"),
                ),
                (
                    "next_appointment",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Appointment"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_observations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observations",
                        to="prescription.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Observation",
                "verbose_name_plural": "Observations",
                "db_table": "prescription_observations",
                "ordering": ["-observation_date"],
            },
        ),
        migrations.CreateModel(
            name="DrugInteraction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Interaction ID"
                    ),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("contraindicated", "Contraindicated"),
                            ("major", "Major"),
                            ("moderate", "Moderate"),
                            ("minor", "Minor"),
                        ],
                        max_length=50,
                        verbose_name="Interaction Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(verbose_name="Interaction Description"),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        max_length=20,
                        verbose_name="Severity",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "drug1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions_as_drug1",
                        to="prescription.drug",
                        verbose_name="First Drug",
                    ),
                ),
                (
                    "drug2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions_as_drug2",
                        to="prescription.drug",
                        verbose_name="Second Drug",
                    ),
                ),
            ],
            options={
                "verbose_name": "Drug Interaction",
                "verbose_name_plural": "Drug Interactions",
                "db_table": "prescription_drug_interactions",
                "ordering": ["drug1__name", "drug2__name"],
            },
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(fields=["name"], name="prescriptio_name_d3c35e_idx"),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["generic_name"], name="prescriptio_generic_0be397_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["category"], name="prescriptio_categor_e2b46d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["is_active"], name="prescriptio_is_acti_1534d1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(
                fields=["name", "generic_name"], name="prescriptio_name_c32c0a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drug",
            index=models.Index(fields=["interactions"], name="idx_drugs_interactions"),
        ),
        migrations.AddIndex(
            model_name="prescriptiontemplate",
            index=models.Index(fields=["name"], name="prescriptio_name_f659d0_idx"),
        ),
        migrations.AddIndex(
            model_name="prescriptiontemplate",
            index=models.Index(
                fields=["is_active"], name="prescriptio_is_acti_0c9a0b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptiontemplate",
            index=models.Index(
                fields=["created_by"], name="prescriptio_created_1ac011_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptiontemplate",
            index=models.Index(
                fields=["medications"], name="idx_templates_medications"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptionaudittrail",
            index=models.Index(
                fields=["table_name"], name="prescriptio_table_n_786198_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptionaudittrail",
            index=models.Index(
                fields=["record_id"], name="prescriptio_record__9c7bf3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptionaudittrail",
            index=models.Index(fields=["action"], name="prescriptio_action_a3ca3b_idx"),
        ),
        migrations.AddIndex(
            model_name="prescriptionaudittrail",
            index=models.Index(
                fields=["changed_by"], name="prescriptio_changed_028ef9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescriptionaudittrail",
            index=models.Index(
                fields=["changed_at"], name="prescriptio_changed_33f890_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["patient", "prescription_date"],
                name="prescriptio_patient_8634ed_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(fields=["status"], name="prescriptio_status_4ea054_idx"),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["created_by"], name="prescriptio_created_dd312b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["prescription_date"], name="prescriptio_prescri_7786ce_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["medications"], name="idx_prescriptions_medications"
            ),
        ),
        migrations.AddIndex(
            model_name="prescription",
            index=models.Index(
                fields=["patient", "prescription_date"],
                name="idx_prescriptions_history",
            ),
        ),
        migrations.AddIndex(
            model_name="patientprofile",
            index=models.Index(
                fields=["patient"], name="prescriptio_patient_329945_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientprofile",
            index=models.Index(fields=["vital_signs"], name="idx_profiles_vital_signs"),
        ),
        migrations.AddIndex(
            model_name="patientprofile",
            index=models.Index(fields=["lab_results"], name="idx_profiles_lab_results"),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(fields=["name"], name="prescriptio_name_8c70c9_idx"),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(fields=["phone"], name="prescriptio_phone_9cdd30_idx"),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(fields=["email"], name="prescriptio_email_c63ae1_idx"),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["created_at"], name="prescriptio_created_5af086_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["name", "phone", "uid"], name="prescriptio_name_8a8920_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["patient", "observation_date"],
                name="prescriptio_patient_7ffa71_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["observation_type"], name="prescriptio_observa_5b0bf2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["created_by"], name="prescriptio_created_8fa314_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["observation_date"], name="prescriptio_observa_71f03c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["patient", "observation_date"], name="idx_observations_timeline"
            ),
        ),
        migrations.AddIndex(
            model_name="druginteraction",
            index=models.Index(fields=["drug1"], name="prescriptio_drug1_i_d62755_idx"),
        ),
        migrations.AddIndex(
            model_name="druginteraction",
            index=models.Index(fields=["drug2"], name="prescriptio_drug2_i_07733b_idx"),
        ),
        migrations.AddIndex(
            model_name="druginteraction",
            index=models.Index(
                fields=["interaction_type"], name="prescriptio_interac_7574d2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="druginteraction",
            index=models.Index(
                fields=["severity"], name="prescriptio_severit_71bbe7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="druginteraction",
            unique_together={("drug1", "drug2")},
        ),
    ]
