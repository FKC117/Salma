# Generated by Django 4.2.7 on 2025-09-29 06:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("analytics", "0007_add_is_fallback_to_ai_interpretation"),
    ]

    operations = [
        migrations.AddField(
            model_name="chatmessage",
            name="analysis_context",
            field=models.JSONField(
                default=dict,
                help_text="Context about current dataset and analysis state",
            ),
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="executed_analysis_id",
            field=models.ForeignKey(
                blank=True,
                help_text="Reference to executed analysis result",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="executed_from_chat",
                to="analytics.analysisresult",
            ),
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="suggested_analysis",
            field=models.JSONField(
                default=dict, help_text="AI-suggested analysis tools and parameters"
            ),
        ),
        migrations.CreateModel(
            name="AnalysisSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "suggested_parameters",
                    models.JSONField(
                        default=dict, help_text="Suggested tool parameters"
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="AI confidence in suggestion (0.0-1.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "reasoning",
                    models.TextField(
                        help_text="AI explanation for suggestion", max_length=500
                    ),
                ),
                (
                    "is_executed",
                    models.BooleanField(
                        default=False, help_text="Whether suggestion was executed"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "analysis_tool",
                    models.ForeignKey(
                        help_text="Analysis tool suggested",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggestions",
                        to="analytics.analysistool",
                    ),
                ),
                (
                    "chat_message",
                    models.ForeignKey(
                        help_text="Chat message that generated this suggestion",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_suggestions",
                        to="analytics.chatmessage",
                    ),
                ),
                (
                    "execution_result",
                    models.ForeignKey(
                        blank=True,
                        help_text="Analysis result if executed",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="suggested_from",
                        to="analytics.analysisresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analysis Suggestion",
                "verbose_name_plural": "Analysis Suggestions",
                "db_table": "analytics_analysis_suggestion",
                "ordering": ["-confidence_score", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the session is currently active",
                    ),
                ),
                (
                    "context_summary",
                    models.TextField(
                        blank=True,
                        help_text="AI-generated summary of conversation context",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, help_text="Last message timestamp"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analysis_session",
                    models.ForeignKey(
                        help_text="Analysis session this chat belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to="analytics.analysissession",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who owns this chat session",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Session",
                "verbose_name_plural": "Chat Sessions",
                "db_table": "analytics_chat_session",
                "ordering": ["-last_activity"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="analytics_c_user_id_939564_idx",
                    ),
                    models.Index(
                        fields=["analysis_session", "is_active"],
                        name="analytics_c_analysi_74e711_idx",
                    ),
                    models.Index(
                        fields=["last_activity"], name="analytics_c_last_ac_5286d4_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="chatsession",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_active", True)),
                fields=("analysis_session",),
                name="unique_active_chat_session_per_analysis",
            ),
        ),
        migrations.AddIndex(
            model_name="analysissuggestion",
            index=models.Index(
                fields=["chat_message", "is_executed"],
                name="analytics_a_chat_me_d9d45e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analysissuggestion",
            index=models.Index(
                fields=["analysis_tool", "confidence_score"],
                name="analytics_a_analysi_3a88ef_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analysissuggestion",
            index=models.Index(
                fields=["created_at"], name="analytics_a_created_739e11_idx"
            ),
        ),
    ]
