openapi: 3.0.3
info:
  title: Prescription Management System API
  description: |
    Comprehensive API for prescription management system designed for breast cancer surgeons.
    Provides patient management, prescription creation, drug interaction checking, and medical history tracking.
  version: 1.0.0
  contact:
    name: Prescription Management System Team
    email: support@prescription-system.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.prescription-system.com/v1
    description: Production server
  - url: https://staging-api.prescription-system.com/v1
    description: Staging server
  - url: http://localhost:8000/api/prescription/v1
    description: Development server

security:
  - BearerAuth: []
  - SessionAuth: []

paths:
  # Patient Management Endpoints
  /patients:
    get:
      summary: List all patients
      description: Retrieve a paginated list of all patients
      tags:
        - Patients
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          description: Number of patients per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: search
          in: query
          description: Search term for patient name, UID, or phone
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: Filter by gender
          required: false
          schema:
            type: string
            enum: [M, F, Other]
        - name: age_min
          in: query
          description: Minimum age filter
          required: false
          schema:
            type: integer
            minimum: 0
        - name: age_max
          in: query
          description: Maximum age filter
          required: false
          schema:
            type: integer
            maximum: 150
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Total number of patients
                  next:
                    type: string
                    nullable: true
                    description: URL for next page
                  previous:
                    type: string
                    nullable: true
                    description: URL for previous page
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new patient
      description: Create a new patient with unique UID
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreate'
      responses:
        '201':
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Patient with UID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /patients/{uid}:
    get:
      summary: Get patient details
      description: Retrieve detailed information about a specific patient
      tags:
        - Patients
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique patient identifier
          schema:
            type: string
            pattern: '^[A-Z0-9]+$'
      responses:
        '200':
          description: Patient details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDetail'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update patient information
      description: Update patient information
      tags:
        - Patients
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique patient identifier
          schema:
            type: string
            pattern: '^[A-Z0-9]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUpdate'
      responses:
        '200':
          description: Patient updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete patient
      description: Delete a patient and all associated data
      tags:
        - Patients
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique patient identifier
          schema:
            type: string
            pattern: '^[A-Z0-9]+$'
      responses:
        '204':
          description: Patient deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /patients/search:
    get:
      summary: Search patients
      description: Search patients by various criteria
      tags:
        - Patients
      parameters:
        - name: q
          in: query
          required: true
          description: Search query
          schema:
            type: string
            minLength: 2
        - name: limit
          in: query
          description: Maximum number of results
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patient'
                  count:
                    type: integer
                    description: Number of results found
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Prescription Management Endpoints
  /prescriptions:
    get:
      summary: List prescriptions
      description: Retrieve a paginated list of prescriptions
      tags:
        - Prescriptions
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          description: Number of prescriptions per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: patient_uid
          in: query
          description: Filter by patient UID
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by prescription status
          required: false
          schema:
            type: string
            enum: [active, completed, cancelled, expired]
        - name: date_from
          in: query
          description: Filter prescriptions from date
          required: false
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Filter prescriptions to date
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Total number of prescriptions
                  next:
                    type: string
                    nullable: true
                    description: URL for next page
                  previous:
                    type: string
                    nullable: true
                    description: URL for previous page
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prescription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new prescription
      description: Create a new prescription for a patient
      tags:
        - Prescriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrescriptionCreate'
      responses:
        '201':
          description: Prescription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /prescriptions/{id}:
    get:
      summary: Get prescription details
      description: Retrieve detailed information about a specific prescription
      tags:
        - Prescriptions
      parameters:
        - name: id
          in: path
          required: true
          description: Prescription ID
          schema:
            type: integer
      responses:
        '200':
          description: Prescription details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionDetail'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update prescription
      description: Update prescription information
      tags:
        - Prescriptions
      parameters:
        - name: id
          in: path
          required: true
          description: Prescription ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrescriptionUpdate'
      responses:
        '200':
          description: Prescription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete prescription
      description: Delete a prescription
      tags:
        - Prescriptions
      parameters:
        - name: id
          in: path
          required: true
          description: Prescription ID
          schema:
            type: integer
      responses:
        '204':
          description: Prescription deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /prescriptions/validate:
    post:
      summary: Validate prescription
      description: Validate prescription data without creating it
      tags:
        - Prescriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrescriptionCreate'
      responses:
        '200':
          description: Prescription validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Whether the prescription is valid
                  errors:
                    type: array
                    items:
                      type: string
                    description: List of validation errors
                  warnings:
                    type: array
                    items:
                      type: string
                    description: List of validation warnings
                  interactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/DrugInteraction'
                    description: Drug interactions found
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Drug Management Endpoints
  /drugs:
    get:
      summary: List drugs
      description: Retrieve a paginated list of drugs
      tags:
        - Drugs
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          description: Number of drugs per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: search
          in: query
          description: Search term for drug name or generic name
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filter by drug category
          required: false
          schema:
            type: string
        - name: active_only
          in: query
          description: Show only active drugs
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Total number of drugs
                  next:
                    type: string
                    nullable: true
                    description: URL for next page
                  previous:
                    type: string
                    nullable: true
                    description: URL for previous page
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Drug'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /drugs/{id}:
    get:
      summary: Get drug details
      description: Retrieve detailed information about a specific drug
      tags:
        - Drugs
      parameters:
        - name: id
          in: path
          required: true
          description: Drug ID
          schema:
            type: integer
      responses:
        '200':
          description: Drug details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugDetail'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /drugs/interactions:
    post:
      summary: Check drug interactions
      description: Check for interactions between multiple drugs
      tags:
        - Drugs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                drugs:
                  type: array
                  items:
                    type: object
                    properties:
                      drug_id:
                        type: integer
                      name:
                        type: string
                      dosage:
                        type: string
                  minItems: 2
                  description: List of drugs to check for interactions
      responses:
        '200':
          description: Drug interactions found
          content:
            application/json:
              schema:
                type: object
                properties:
                  interactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/DrugInteraction'
                    description: List of drug interactions found
                  severity:
                    type: string
                    enum: [high, medium, low]
                    description: Highest severity level found
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Prescription Templates Endpoints
  /templates:
    get:
      summary: List prescription templates
      description: Retrieve a list of prescription templates
      tags:
        - Templates
      parameters:
        - name: active_only
          in: query
          description: Show only active templates
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrescriptionTemplate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create prescription template
      description: Create a new prescription template
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrescriptionTemplateCreate'
      responses:
        '201':
          description: Template created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionTemplate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /templates/{id}:
    get:
      summary: Get template details
      description: Retrieve detailed information about a specific template
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          description: Template ID
          schema:
            type: integer
      responses:
        '200':
          description: Template details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionTemplate'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update template
      description: Update prescription template
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          description: Template ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrescriptionTemplateUpdate'
      responses:
        '200':
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionTemplate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete template
      description: Delete a prescription template
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          description: Template ID
          schema:
            type: integer
      responses:
        '204':
          description: Template deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Patient History Endpoints
  /patients/{uid}/history:
    get:
      summary: Get patient history
      description: Retrieve complete history for a patient
      tags:
        - History
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique patient identifier
          schema:
            type: string
            pattern: '^[A-Z0-9]+$'
        - name: type
          in: query
          description: Filter by history type
          required: false
          schema:
            type: string
            enum: [prescriptions, observations, all]
            default: all
        - name: limit
          in: query
          description: Maximum number of records
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Patient history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientHistory'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /patients/{uid}/timeline:
    get:
      summary: Get patient timeline
      description: Retrieve chronological timeline for a patient
      tags:
        - History
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique patient identifier
          schema:
            type: string
            pattern: '^[A-Z0-9]+$'
        - name: start_date
          in: query
          description: Start date for timeline
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: End date for timeline
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Patient timeline retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientTimeline'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Analytics Endpoints
  /analytics/dashboard:
    get:
      summary: Get dashboard analytics
      description: Retrieve analytics data for the dashboard
      tags:
        - Analytics
      parameters:
        - name: period
          in: query
          description: Time period for analytics
          required: false
          schema:
            type: string
            enum: [today, week, month, quarter, year]
            default: month
      responses:
        '200':
          description: Dashboard analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardAnalytics'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /analytics/prescriptions:
    get:
      summary: Get prescription analytics
      description: Retrieve prescription analytics data
      tags:
        - Analytics
      parameters:
        - name: period
          in: query
          description: Time period for analytics
          required: false
          schema:
            type: string
            enum: [today, week, month, quarter, year]
            default: month
        - name: group_by
          in: query
          description: Group analytics by field
          required: false
          schema:
            type: string
            enum: [day, week, month, diagnosis, medication]
            default: day
      responses:
        '200':
          description: Prescription analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionAnalytics'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    SessionAuth:
      type: apiKey
      in: cookie
      name: sessionid

  schemas:
    Patient:
      type: object
      properties:
        uid:
          type: string
          description: Unique patient identifier
          example: "P001"
        name:
          type: string
          description: Patient full name
          example: "Sarah Johnson"
        age:
          type: integer
          description: Patient age
          example: 45
        gender:
          type: string
          enum: [M, F, Other]
          description: Patient gender
          example: "F"
        phone:
          type: string
          description: Patient phone number
          example: "+1234567890"
        email:
          type: string
          format: email
          description: Patient email address
          example: "sarah.johnson@email.com"
        address:
          type: string
          description: Patient address
          example: "123 Main St, City, State 12345"
        emergency_contact:
          type: string
          description: Emergency contact name
          example: "John Johnson"
        emergency_phone:
          type: string
          description: Emergency contact phone
          example: "+1234567891"
        created_at:
          type: string
          format: date-time
          description: Patient creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Patient last update timestamp

    PatientCreate:
      type: object
      required:
        - uid
        - name
        - age
        - gender
        - phone
      properties:
        uid:
          type: string
          description: Unique patient identifier
          example: "P001"
        name:
          type: string
          description: Patient full name
          example: "Sarah Johnson"
        age:
          type: integer
          minimum: 0
          maximum: 150
          description: Patient age
          example: 45
        gender:
          type: string
          enum: [M, F, Other]
          description: Patient gender
          example: "F"
        phone:
          type: string
          description: Patient phone number
          example: "+1234567890"
        email:
          type: string
          format: email
          description: Patient email address
          example: "sarah.johnson@email.com"
        address:
          type: string
          description: Patient address
          example: "123 Main St, City, State 12345"
        emergency_contact:
          type: string
          description: Emergency contact name
          example: "John Johnson"
        emergency_phone:
          type: string
          description: Emergency contact phone
          example: "+1234567891"

    PatientUpdate:
      type: object
      properties:
        name:
          type: string
          description: Patient full name
          example: "Sarah Johnson"
        age:
          type: integer
          minimum: 0
          maximum: 150
          description: Patient age
          example: 45
        gender:
          type: string
          enum: [M, F, Other]
          description: Patient gender
          example: "F"
        phone:
          type: string
          description: Patient phone number
          example: "+1234567890"
        email:
          type: string
          format: email
          description: Patient email address
          example: "sarah.johnson@email.com"
        address:
          type: string
          description: Patient address
          example: "123 Main St, City, State 12345"
        emergency_contact:
          type: string
          description: Emergency contact name
          example: "John Johnson"
        emergency_phone:
          type: string
          description: Emergency contact phone
          example: "+1234567891"

    PatientDetail:
      allOf:
        - $ref: '#/components/schemas/Patient'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/PatientProfile'
            prescriptions_count:
              type: integer
              description: Number of prescriptions
            observations_count:
              type: integer
              description: Number of observations
            last_visit:
              type: string
              format: date
              description: Date of last visit

    PatientProfile:
      type: object
      properties:
        medical_history:
          type: string
          description: Patient medical history
        allergies:
          type: string
          description: Patient allergies
        current_medications:
          type: string
          description: Current medications
        vital_signs:
          type: object
          description: Vital signs data
        lab_results:
          type: object
          description: Lab results data
        notes:
          type: string
          description: Additional notes

    Prescription:
      type: object
      properties:
        id:
          type: integer
          description: Prescription ID
          example: 1
        patient_uid:
          type: string
          description: Patient UID
          example: "P001"
        prescription_date:
          type: string
          format: date
          description: Prescription date
        diagnosis:
          type: string
          description: Diagnosis
          example: "Breast Cancer"
        symptoms:
          type: string
          description: Symptoms
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
          description: List of medications
        instructions:
          type: string
          description: Prescription instructions
        follow_up_date:
          type: string
          format: date
          description: Follow-up date
        status:
          type: string
          enum: [active, completed, cancelled, expired]
          description: Prescription status
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    PrescriptionCreate:
      type: object
      required:
        - patient_uid
        - diagnosis
        - medications
        - instructions
      properties:
        patient_uid:
          type: string
          description: Patient UID
          example: "P001"
        prescription_date:
          type: string
          format: date
          description: Prescription date
        diagnosis:
          type: string
          description: Diagnosis
          example: "Breast Cancer"
        symptoms:
          type: string
          description: Symptoms
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
          description: List of medications
        instructions:
          type: string
          description: Prescription instructions
        follow_up_date:
          type: string
          format: date
          description: Follow-up date

    PrescriptionUpdate:
      type: object
      properties:
        prescription_date:
          type: string
          format: date
          description: Prescription date
        diagnosis:
          type: string
          description: Diagnosis
        symptoms:
          type: string
          description: Symptoms
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
          description: List of medications
        instructions:
          type: string
          description: Prescription instructions
        follow_up_date:
          type: string
          format: date
          description: Follow-up date
        status:
          type: string
          enum: [active, completed, cancelled, expired]
          description: Prescription status

    PrescriptionDetail:
      allOf:
        - $ref: '#/components/schemas/Prescription'
        - type: object
          properties:
            patient:
              $ref: '#/components/schemas/Patient'
            interactions:
              type: array
              items:
                $ref: '#/components/schemas/DrugInteraction'
              description: Drug interactions found

    Medication:
      type: object
      required:
        - name
        - dosage
        - frequency
      properties:
        name:
          type: string
          description: Medication name
          example: "Tamoxifen"
        dosage:
          type: string
          description: Medication dosage
          example: "20mg"
        frequency:
          type: string
          description: Medication frequency
          example: "daily"
        duration:
          type: string
          description: Medication duration
          example: "3 months"
        instructions:
          type: string
          description: Special instructions
          example: "Take with food"

    Drug:
      type: object
      properties:
        id:
          type: integer
          description: Drug ID
        name:
          type: string
          description: Drug name
          example: "Tamoxifen"
        generic_name:
          type: string
          description: Generic name
          example: "Tamoxifen Citrate"
        dosage_form:
          type: string
          description: Dosage form
          example: "Tablet"
        strength:
          type: string
          description: Drug strength
          example: "20mg"
        category:
          type: string
          description: Drug category
          example: "Antineoplastic"
        is_active:
          type: boolean
          description: Whether drug is active

    DrugDetail:
      allOf:
        - $ref: '#/components/schemas/Drug'
        - type: object
          properties:
            indications:
              type: string
              description: Drug indications
            contraindications:
              type: string
              description: Drug contraindications
            side_effects:
              type: string
              description: Drug side effects
            interactions:
              type: array
              items:
                $ref: '#/components/schemas/DrugInteraction'
              description: Drug interactions

    DrugInteraction:
      type: object
      properties:
        drug1:
          type: string
          description: First drug name
        drug2:
          type: string
          description: Second drug name
        interaction_type:
          type: string
          enum: [contraindicated, major, moderate, minor]
          description: Type of interaction
        description:
          type: string
          description: Interaction description
        severity:
          type: string
          enum: [high, medium, low]
          description: Interaction severity

    PrescriptionTemplate:
      type: object
      properties:
        id:
          type: integer
          description: Template ID
        name:
          type: string
          description: Template name
          example: "Tamoxifen Protocol"
        description:
          type: string
          description: Template description
        diagnosis:
          type: string
          description: Associated diagnosis
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
          description: Template medications
        instructions:
          type: string
          description: Template instructions
        is_active:
          type: boolean
          description: Whether template is active

    PrescriptionTemplateCreate:
      type: object
      required:
        - name
        - diagnosis
        - medications
        - instructions
      properties:
        name:
          type: string
          description: Template name
          example: "Tamoxifen Protocol"
        description:
          type: string
          description: Template description
        diagnosis:
          type: string
          description: Associated diagnosis
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
          description: Template medications
        instructions:
          type: string
          description: Template instructions

    PrescriptionTemplateUpdate:
      type: object
      properties:
        name:
          type: string
          description: Template name
        description:
          type: string
          description: Template description
        diagnosis:
          type: string
          description: Associated diagnosis
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
          description: Template medications
        instructions:
          type: string
          description: Template instructions
        is_active:
          type: boolean
          description: Whether template is active

    PatientHistory:
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        prescriptions:
          type: array
          items:
            $ref: '#/components/schemas/Prescription'
          description: Patient prescriptions
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
          description: Patient observations

    PatientTimeline:
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        timeline:
          type: array
          items:
            $ref: '#/components/schemas/TimelineEvent'
          description: Chronological timeline events

    TimelineEvent:
      type: object
      properties:
        id:
          type: integer
          description: Event ID
        type:
          type: string
          enum: [prescription, observation]
          description: Event type
        date:
          type: string
          format: date
          description: Event date
        title:
          type: string
          description: Event title
        description:
          type: string
          description: Event description
        data:
          type: object
          description: Event-specific data

    Observation:
      type: object
      properties:
        id:
          type: integer
          description: Observation ID
        patient_uid:
          type: string
          description: Patient UID
        observation_date:
          type: string
          format: date
          description: Observation date
        observation_type:
          type: string
          enum: [consultation, follow_up, emergency, routine, surgery]
          description: Observation type
        symptoms:
          type: string
          description: Symptoms observed
        examination_findings:
          type: string
          description: Examination findings
        recommendations:
          type: string
          description: Recommendations
        next_appointment:
          type: string
          format: date
          description: Next appointment date
        created_at:
          type: string
          format: date-time
          description: Creation timestamp

    DashboardAnalytics:
      type: object
      properties:
        total_patients:
          type: integer
          description: Total number of patients
        total_prescriptions:
          type: integer
          description: Total number of prescriptions
        active_prescriptions:
          type: integer
          description: Number of active prescriptions
        today_patients:
          type: integer
          description: Patients seen today
        today_prescriptions:
          type: integer
          description: Prescriptions created today
        follow_ups_due:
          type: integer
          description: Follow-ups due
        trends:
          type: object
          properties:
            patients:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  count:
                    type: integer
            prescriptions:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  count:
                    type: integer

    PrescriptionAnalytics:
      type: object
      properties:
        total_prescriptions:
          type: integer
          description: Total prescriptions in period
        prescriptions_by_status:
          type: object
          properties:
            active:
              type: integer
            completed:
              type: integer
            cancelled:
              type: integer
            expired:
              type: integer
        top_medications:
          type: array
          items:
            type: object
            properties:
              medication:
                type: string
              count:
                type: integer
        prescriptions_by_diagnosis:
          type: array
          items:
            type: object
            properties:
              diagnosis:
                type: string
              count:
                type: integer
        daily_trends:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              count:
                type: integer

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Invalid request data"
            code: "BAD_REQUEST"
            details:
              field: "Field name"
              message: "Field-specific error message"

    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Authentication required"
            code: "UNAUTHORIZED"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Resource not found"
            code: "NOT_FOUND"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Internal server error"
            code: "INTERNAL_ERROR"

tags:
  - name: Patients
    description: Patient management operations
  - name: Prescriptions
    description: Prescription management operations
  - name: Drugs
    description: Drug database operations
  - name: Templates
    description: Prescription template operations
  - name: History
    description: Patient history operations
  - name: Analytics
    description: Analytics and reporting operations
